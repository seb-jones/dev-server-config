# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/upload-artifact@v2
        with:
          name: log-files
          path: /usr/local/var/log

      - name: Install Brew Packages
        run: |
          brew tap shivammathur/php
          brew install php@8.0 shivammathur/php/php@7.3 shivammathur/php/php@5.6 nginx dnsmasq mkcert

      - name: Run Setup Script
        run: |
          # This security command prevents an error in mkcert -install on CI runners.
          # Source: https://github.com/actions/virtual-environments/issues/4519#issuecomment-970202641
          sudo security authorizationdb write com.apple.trust-settings.admin allow

          ./setup.sh

      - name: Test
        run: |
          # Check NGINX configuration file syntax
          nginx -t

          # Start services
          sudo brew services start dnsmasq
          brew services start php@7.3
          brew services start php@8.0
          brew services start nginx

          # Create directories for test sites
          mkdir -pv ~/sites/p73/php73-test
          mkdir -pv ~/sites/p80/php80-test

          # Add test files to site directories
          echo '<?php phpinfo(); ?>' > ~/sites/p73/php73-test/index.php
          echo '<?php phpinfo(); ?>' > ~/sites/p80/php80-test/index.php

          # Try running each PHP file in the terminal
          cd ~/sites/p73/php73-test && php index.php
          cd ~/sites/p80/php73-test && php index.php

          # Send a HTTP request to each site
          curl --insecure 'https://php73-test.test'
          curl --insecure 'https://php80-test.test'
